package concessionaria_js;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.SQLException;

// @author JoseV
public class TelaFornecedor extends javax.swing.JFrame {

    /**
     * Creates new form TelaFornecedor
     */
    public TelaFornecedor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAdicionarFornecedor = new javax.swing.JButton();
        btnRemoverFornecedor = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        txEndereco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txEstado = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txTelefone = new javax.swing.JTextField();
        txNomeEmpresa = new javax.swing.JTextField();
        txCnpj = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        TbFornecedor = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txObservacoes = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txCep = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txId = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAtualizarFornecedor = new javax.swing.JButton();
        btnPreencher = new javax.swing.JButton();
        btnLimparFornecedor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(7, 7, 7));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAdicionarFornecedor.setBackground(new java.awt.Color(51, 51, 51));
        btnAdicionarFornecedor.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        btnAdicionarFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionarFornecedor.setText("Adicionar Fornecedor");
        btnAdicionarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarFornecedorActionPerformed(evt);
            }
        });

        btnRemoverFornecedor.setBackground(new java.awt.Color(51, 51, 51));
        btnRemoverFornecedor.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        btnRemoverFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoverFornecedor.setText("Remover Fornecedor");
        btnRemoverFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverFornecedorActionPerformed(evt);
            }
        });

        btnVoltar.setBackground(new java.awt.Color(51, 51, 51));
        btnVoltar.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        txEndereco.setBackground(new java.awt.Color(51, 51, 51));
        txEndereco.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        txEndereco.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("NOME DA EMPRESA:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ENDEREÇO:");

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ESTADO:");

        txEstado.setBackground(new java.awt.Color(51, 51, 51));
        txEstado.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        txEstado.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("TELEFONE:");

        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("CNPJ:");

        txTelefone.setBackground(new java.awt.Color(51, 51, 51));
        txTelefone.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        txTelefone.setForeground(new java.awt.Color(255, 255, 255));

        txNomeEmpresa.setBackground(new java.awt.Color(51, 51, 51));
        txNomeEmpresa.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        txNomeEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        txNomeEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNomeEmpresaActionPerformed(evt);
            }
        });

        txCnpj.setBackground(new java.awt.Color(51, 51, 51));
        txCnpj.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        txCnpj.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 3, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Lista-Fornecedores");

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 3, 26)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Concessionaria JS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Administração Concessionaria");

        TbFornecedor.setBackground(new java.awt.Color(51, 51, 51));
        TbFornecedor.setFont(new java.awt.Font("Segoe UI Black", 3, 12)); // NOI18N
        TbFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        TbFornecedor.setModel(MontarTabela());
        jScrollPane2.setViewportView(TbFornecedor);

        jScrollPane3.setViewportView(jScrollPane2);

        jLabel13.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("OBSERVAÇÕES:");

        txObservacoes.setBackground(new java.awt.Color(51, 51, 51));
        txObservacoes.setColumns(20);
        txObservacoes.setFont(new java.awt.Font("Segoe UI Black", 3, 12)); // NOI18N
        txObservacoes.setForeground(new java.awt.Color(255, 255, 255));
        txObservacoes.setRows(5);
        jScrollPane1.setViewportView(txObservacoes);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/user_13333085.png"))); // NOI18N

        txCep.setBackground(new java.awt.Color(51, 51, 51));
        txCep.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        txCep.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("CEP:");

        txId.setEditable(false);
        txId.setBackground(new java.awt.Color(51, 51, 51));
        txId.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        txId.setForeground(new java.awt.Color(255, 255, 255));
        txId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txIdActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("ID:");

        btnAtualizarFornecedor.setBackground(new java.awt.Color(51, 51, 51));
        btnAtualizarFornecedor.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        btnAtualizarFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        btnAtualizarFornecedor.setText("Atualizar Fornecedor");
        btnAtualizarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarFornecedorActionPerformed(evt);
            }
        });

        btnPreencher.setBackground(new java.awt.Color(51, 51, 51));
        btnPreencher.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        btnPreencher.setForeground(new java.awt.Color(255, 255, 255));
        btnPreencher.setText("Preencher Fornecedor");
        btnPreencher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreencherActionPerformed(evt);
            }
        });

        btnLimparFornecedor.setBackground(new java.awt.Color(51, 51, 51));
        btnLimparFornecedor.setFont(new java.awt.Font("Segoe UI Black", 3, 18)); // NOI18N
        btnLimparFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        btnLimparFornecedor.setText("Limpar Fornecedor");
        btnLimparFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparFornecedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(215, 215, 215)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txCep, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13)))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdicionarFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoverFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimparFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAtualizarFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPreencher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txNomeEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(txEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel11)))
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdicionarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPreencher, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txNomeEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNomeEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNomeEmpresaActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // Fecha a janela atual
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnRemoverFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverFornecedorActionPerformed
        // Verifica se há uma linha selecionada na tabela
        int selectedRow = TbFornecedor.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um fornecedor para remover.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtém o ID do fornecedor selecionado na tabela
        int idFornecedor = (int) TbFornecedor.getValueAt(selectedRow, 0);

        try {
            // Cria uma instância da classe Conexao para obter a conexão com o banco de dados
            Conexao conexao = new Conexao();
            Connection conn = conexao.getConexao();

            // Instancia o FornecedorDao com a conexão obtida
            FornecedorDao fornecedorDao = new FornecedorDao(conn);

            // Chama o método excluirFornecedor do FornecedorDao para remover o fornecedor do banco de dados
            boolean removido = fornecedorDao.excluirFornecedor(idFornecedor);
            if (removido) {
                JOptionPane.showMessageDialog(this, "Fornecedor removido com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

                // Atualiza a tabela de fornecedores após remover o fornecedor
                atualizarTabelaFornecedores();
            } else {
                JOptionPane.showMessageDialog(this, "Não foi possível remover o fornecedor.", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            // Fecha a conexão após o uso
            conn.close();

        } catch (SQLException ex) {
            // Exibe uma mensagem de erro caso ocorra uma exceção SQL
            JOptionPane.showMessageDialog(this, "Erro ao remover fornecedor: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverFornecedorActionPerformed

    private void btnAdicionarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarFornecedorActionPerformed
        String nome = txNomeEmpresa.getText();
        String endereco = txEndereco.getText();
        String estado = txEstado.getText();
        String cep = txCep.getText();
        String telefone = txTelefone.getText();
        String cnpj = txCnpj.getText();
        String observacoes = txObservacoes.getText(); // Novo campo para observações

        // Verifica se todos os campos obrigatórios estão preenchidos
        if (nome.isEmpty() || endereco.isEmpty() || estado.isEmpty() || cep.isEmpty() || telefone.isEmpty() || cnpj.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos obrigatórios.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validação do CNPJ
        if (!validarCNPJ(cnpj)) {
            JOptionPane.showMessageDialog(this, "CNPJ inválido. Por favor, insira um CNPJ válido no formato 00.000.000/0000-00.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validação do telefone
        if (!validarTelefone(telefone)) {
            JOptionPane.showMessageDialog(this, "Número de telefone inválido. Por favor, insira no formato (xx) xxxxx-xxxx.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validação do CEP
        if (!validarCep(cep)) {
            JOptionPane.showMessageDialog(this, "CEP inválido. Por favor, insira um CEP válido no formato 00000-000.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Cria um objeto Fornecedor com os dados fornecidos
            Fornecedor fornecedor = new Fornecedor(0, nome, endereco, estado, cep, telefone, cnpj, observacoes);

            // Cria uma instância da classe Conexao para obter a conexão com o banco de dados
            Conexao conexao = new Conexao();
            Connection conn = conexao.getConexao();

            // Instancia o FornecedorDao com a conexão obtida
            FornecedorDao fornecedorDao = new FornecedorDao(conn);

            // Chama o método inserirFornecedor do FornecedorDao para adicionar o fornecedor ao banco de dados
            fornecedorDao.inserirFornecedor(fornecedor);

            // Exibe uma mensagem de sucesso
            JOptionPane.showMessageDialog(this, "Fornecedor cadastrado com sucesso no banco de dados!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

            // Limpa os campos após cadastrar o fornecedor
            limparCampos();

            // Atualiza a tabela de fornecedores após adicionar um novo fornecedor
            atualizarTabelaFornecedores();

            // Fecha a conexão após o uso
            conn.close();

        } catch (SQLException ex) {
            // Exibe uma mensagem de erro caso ocorra uma exceção SQL
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar fornecedor: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean validarCNPJ(String cnpj) {
        // Implementar a lógica de validação do CNPJ aqui
        // Este é um exemplo simples e não cobre todos os casos de validação de CNPJ
        String cnpjRegex = "\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}";
        return cnpj.matches(cnpjRegex);
    }

    private boolean validarTelefone(String telefone) {
        // Implementar a lógica de validação do telefone aqui
        String telefoneRegex = "\\(\\d{2}\\) \\d{5}-\\d{4}";
        return telefone.matches(telefoneRegex);
    }

    private boolean validarCep(String cep) {
        // Implementar a lógica de validação do CEP aqui
        String cepRegex = "\\d{5}-\\d{3}";
        return cep.matches(cepRegex);
    }

    // Método para limpar os campos de texto após adicionar um cliente
    private void limparCampos() {
        txNomeEmpresa.setText("");
        txEndereco.setText("");
        txEstado.setText("");
        txTelefone.setText("");
        txCnpj.setText("");
        txCep.setText("");
        txObservacoes.setText("");
        txId.setText("");
    }//GEN-LAST:event_btnAdicionarFornecedorActionPerformed

    private void txIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txIdActionPerformed

    private void btnAtualizarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarFornecedorActionPerformed
        // Verifica se há uma linha selecionada na tabela
        int selectedRow = TbFornecedor.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um fornecedor para preencher os campos.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtém os dados do fornecedor selecionado na tabela
        int idFornecedor = (int) TbFornecedor.getValueAt(selectedRow, 0);
        String nome = (String) TbFornecedor.getValueAt(selectedRow, 1);
        String endereco = (String) TbFornecedor.getValueAt(selectedRow, 2);
        String estado = (String) TbFornecedor.getValueAt(selectedRow, 3);
        String cep = (String) TbFornecedor.getValueAt(selectedRow, 4);
        String telefone = (String) TbFornecedor.getValueAt(selectedRow, 5);
        String cnpj = (String) TbFornecedor.getValueAt(selectedRow, 6);
        String observacoes = (String) TbFornecedor.getValueAt(selectedRow, 7);

        // Preenche os campos de texto com os dados obtidos
        txNomeEmpresa.setText(nome);
        txEndereco.setText(endereco);
        txEstado.setText(estado);
        txCep.setText(cep);
        txTelefone.setText(telefone);
        txCnpj.setText(cnpj);
        txObservacoes.setText(observacoes);

        // Define o ID do fornecedor no campo oculto (se necessário)
        txId.setText(String.valueOf(idFornecedor));
    }//GEN-LAST:event_btnAtualizarFornecedorActionPerformed

    private void btnPreencherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreencherActionPerformed
        // Verifica se há uma linha selecionada na tabela
        int selectedRow = TbFornecedor.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um fornecedor para preencher os campos.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtém os dados do fornecedor selecionado na tabela
        int idFornecedor = (int) TbFornecedor.getValueAt(selectedRow, 0);
        String nome = (String) TbFornecedor.getValueAt(selectedRow, 1);
        String endereco = (String) TbFornecedor.getValueAt(selectedRow, 2);
        String estado = (String) TbFornecedor.getValueAt(selectedRow, 3);
        String cep = (String) TbFornecedor.getValueAt(selectedRow, 4);
        String telefone = (String) TbFornecedor.getValueAt(selectedRow, 5);
        String cnpj = (String) TbFornecedor.getValueAt(selectedRow, 6);
        String observacoes = (String) TbFornecedor.getValueAt(selectedRow, 7);

        // Preenche os campos de texto com os dados obtidos
        txNomeEmpresa.setText(nome);
        txEndereco.setText(endereco);
        txEstado.setText(estado);
        txCep.setText(cep);
        txTelefone.setText(telefone);
        txCnpj.setText(cnpj);
        txObservacoes.setText(observacoes);

        // Define o ID do fornecedor no campo oculto (se necessário)
        txId.setText(String.valueOf(idFornecedor));
    }//GEN-LAST:event_btnPreencherActionPerformed

    private void btnLimparFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparFornecedorActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparFornecedorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFornecedor().setVisible(true);
            }
        });
    }

    private DefaultTableModel MontarTabela() {
        String[] colunas = {"ID", "Nome", "Endereço", "Estado", "Cep", "Telefone", "CNPJ", "Observações"};
        DefaultTableModel model = new DefaultTableModel(colunas, 0);

        try {
            // Cria uma instância da classe Conexao para obter a conexão com o banco de dados
            Conexao conexao = new Conexao();
            Connection conn = conexao.getConexao();

            // Instancia o FornecedorDao com a conexão obtida
            FornecedorDao fornecedorDao = new FornecedorDao(conn);

            // Chama o método para listar todos os fornecedores do banco de dados
            List<Fornecedor> fornecedores = fornecedorDao.listarFornecedores();

            // Preenche o modelo da tabela com os fornecedores recuperados do banco de dados
            for (Fornecedor fornecedor : fornecedores) {
                Object[] linha = {
                    fornecedor.getId(),
                    fornecedor.getNome(),
                    fornecedor.getEndereco(),
                    fornecedor.getEstado(),
                    fornecedor.getCep(),
                    fornecedor.getTelefone(),
                    fornecedor.getCnpj(),
                    fornecedor.getObservacoes()
                };
                model.addRow(linha);
            }

            // Fecha a conexão após o uso
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao consultar fornecedores: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

        return model;
    }

    private void atualizarTabelaFornecedores() {
        try {
            // Cria uma instância da classe Conexao para obter a conexão com o banco de dados
            Conexao conexao = new Conexao();
            Connection conn = conexao.getConexao();

            // Instancia o FornecedorDao com a conexão obtida
            FornecedorDao fornecedorDao = new FornecedorDao(conn);

            // Obtém a lista de fornecedores do banco de dados
            List<Fornecedor> fornecedores = fornecedorDao.listarFornecedores();

            // Obtém o modelo da tabela
            DefaultTableModel model = (DefaultTableModel) TbFornecedor.getModel();

            // Limpa os dados existentes na tabela
            model.setRowCount(0);

            // Popula a tabela com os dados dos fornecedores
            for (Fornecedor fornecedor : fornecedores) {
                Object[] row = {
                    fornecedor.getId(),
                    fornecedor.getNome(),
                    fornecedor.getEndereco(),
                    fornecedor.getEstado(),
                    fornecedor.getCep(),
                    fornecedor.getTelefone(),
                    fornecedor.getCnpj(),
                    fornecedor.getObservacoes()
                };
                model.addRow(row);
            }

            // Fecha a conexão após o uso
            conn.close();

        } catch (SQLException ex) {
            // Exibe uma mensagem de erro caso ocorra uma exceção SQL
            JOptionPane.showMessageDialog(this, "Erro ao atualizar tabela de fornecedores: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TbFornecedor;
    private javax.swing.JButton btnAdicionarFornecedor;
    private javax.swing.JButton btnAtualizarFornecedor;
    private javax.swing.JButton btnLimparFornecedor;
    private javax.swing.JButton btnPreencher;
    private javax.swing.JButton btnRemoverFornecedor;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txCep;
    private javax.swing.JTextField txCnpj;
    private javax.swing.JTextField txEndereco;
    private javax.swing.JTextField txEstado;
    private javax.swing.JTextField txId;
    private javax.swing.JTextField txNomeEmpresa;
    private javax.swing.JTextArea txObservacoes;
    private javax.swing.JTextField txTelefone;
    // End of variables declaration//GEN-END:variables
}
